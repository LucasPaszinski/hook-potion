#! /usr/bin/env elixir

defmodule Hook do
  def start do
    compile_without_warning()
    # format()
    is_formatted()
    are_tests_passing?()
    # has_at_least_test_coverage()
  end

  def format do
    System.cmd("mix", ["format"])
  end

  def is_formatted do
    case System.cmd("mix", ["format", "--check-formatted"]) do
      {_, 0} ->
        IO.puts("ğŸŸ¢ Your project is correctly formatted")

      {_, 1} ->
        IO.puts("ğŸ”´ Your project is not correctly formatted, use 'mix format' and check with 'mix format --check-formatted'")
        exit(1)
    end
  end

  def compile_without_warning do
    {tests_passing, result} = System.cmd("mix", ["compile"])

    case result do
      0 ->
        nil

      1 ->
        IO.puts("ğŸ”´ Your project did not compile. Run 'mix compile'")
        exit(1)
    end

    case String.contains?(tests_passing, "warning") do
      true ->
        IO.puts("ğŸ”´ Your project contain warnings check then. Run 'mix compile --force'")
        exit(1)

      false ->
        IO.puts("ğŸŸ¢ Your project compiled successfully")
    end
  end

  def are_tests_passing? do
    case System.cmd("mix", ["test"]) do
      {_, 0} ->
        IO.puts("ğŸŸ¢ Tests passed")
        true

      {_, 1} ->
        IO.puts("ğŸ”´ Tests are not passings. Run 'mix test'")
        exit(1)
    end
  end

  # def has_at_least_test_coverage do
  #   {tests_passing, result} = System.cmd("mix", ["test", "--cover"])
  #   IO.puts(tests_passing)
  # end
end

Hook.start()
